syntax = "proto3";

option go_package = "/proto";

service WorkspaceInfoService {
  rpc GetWorkspaceInfo(WorkspaceInfoRequest) returns (WorkspaceInfo);
  rpc CreateNewWorkspace(WorkspaceInfo) returns (WorkspaceInfo);
}

message WorkspaceInfoRequest {
  string mnemonic = 1;
}

// Exchanged between Rendezvous nodes,
// as well as between Client and Rendezvous nodes
message WorkspaceInfo {
  string name = 1;
  string mnemonic = 2;
  repeated string workspace_owner_public_keys = 3;

  string security_type = 4;
  oneof security_settings {
    ContactsWrapper contacts_wrapper = 5;
    string password_hash = 6;
  }

  string workspace_type = 7;
}

// ContactsWrapper is a wrapper object for
// the contact public keys array
message ContactsWrapper {
  repeated string contact_public_keys = 1;
}




